{"version":3,"sources":["webpack://gokul.site/./src/components/footer.js","webpack://gokul.site/./src/components/layout.js","webpack://gokul.site/./src/images/gokul.png","webpack://gokul.site/./src/components/menu.js","webpack://gokul.site/./src/templates/blogTemplate.js"],"names":["alt","src","children","className","href","gokulPng","Template","markdownRemark","data","frontmatter","html","readingTime","fields","title","date","updated","text","replace","dangerouslySetInnerHTML","__html"],"mappings":"2HAgBA,IAZe,WACb,OACE,8BACE,wDACA,uBACEA,IAAI,gBACJC,IAAI,uZ,gDCFZ,IAJe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,wBAAMC,UAAU,UAAUD,K,gFCLnC,EAAe,IAA0B,oDC2BzC,EArBa,WACX,OACE,uBAAKC,UAAU,QACb,qBAAGC,KAAK,IAAID,UAAU,QACpB,uBAAKF,IAAKI,EAAUL,IAAI,+BAE1B,sBAAIG,UAAU,aACZ,0BACE,qBAAGC,KAAK,UAAR,UAEF,0BACE,qBAAGA,KAAK,SAAR,SAEF,0BACE,qBAAGA,KAAK,SAAR,a,0HCXK,SAASE,EAAT,GAA6B,IAClCC,EADiC,EAARC,KACzBD,eACAE,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,KACbC,EAD8BJ,EAAXK,OACnBD,YACR,OACE,uBAAKR,UAAU,QACb,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,uBAAKA,UAAU,aACb,0BAAKM,EAAYI,OACjB,uBAAKV,UAAU,qBACb,wCAEE,4BAAOM,EAAYK,OAEpBL,EAAYM,SACX,sCAEE,4BAAON,EAAYM,UAGvB,wCAEE,4BAAOJ,EAAYK,KAAKC,QAAQ,QAAS,OAG7C,uBAAKd,UAAU,oBAAoBe,wBAAyB,CAAEC,OAAQT,OAG1E,gBAAC,IAAD","file":"component---src-templates-blog-template-js-f448135316fccd071394.js","sourcesContent":["import React from 'react';\n\nimport '../styles/footer.css';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Â© Gokulakrishnan Kalaikovan</p>\n      <img\n        alt=\"Gatsby G Logo\"\n        src=\"data:image/svg+xml,%3Csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2a10 10 0 110 20 10 10 0 010-20zm0 2c-3.73 0-6.86 2.55-7.75 6L14 19.75c3.45-.89 6-4.02 6-7.75h-5.25v1.5h3.45a6.37 6.37 0 01-3.89 4.44L6.06 9.69C7 7.31 9.3 5.63 12 5.63c2.13 0 4 1.04 5.18 2.65l1.23-1.06A7.959 7.959 0 0012 4zm-8 8a8 8 0 008 8c.04 0 .09 0-8-8z' fill='%23639'/%3E%3C/svg%3E\"\n      />\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport '../styles/layout.css';\n\nconst Layout = ({ children }) => {\n  return <main className=\"layout\">{children}</main>;\n};\n\nexport default Layout;\n","export default __webpack_public_path__ + \"static/gokul-6a738fa1a84dfff550b3aa675930c0a6.png\";","import React from 'react';\n\nimport gokulPng from '../images/gokul.png';\n\nimport '../styles/menu.css';\n\nconst Menu = () => {\n  return (\n    <div className=\"menu\">\n      <a href=\"/\" className=\"logo\">\n        <img src={gokulPng} alt=\"Gokulakrishnan Kalaikovan\" />\n      </a>\n      <ul className=\"menu-list\">\n        <li>\n          <a href=\"/about\">About</a>\n        </li>\n        <li>\n          <a href=\"/book\">Book</a>\n        </li>\n        <li>\n          <a href=\"/uses\">Uses</a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Menu from '../components/menu';\nimport Footer from '../components/footer';\n\nimport '../styles/blog-post.css';\n\nexport default function Template({ data }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html, fields } = markdownRemark;\n  const { readingTime } = fields;\n  return (\n    <div className=\"grid\">\n      <Menu />\n      <Layout>\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <div className=\"blog-post-details\">\n            <p>\n              Published at\n              <time>{frontmatter.date}</time>\n            </p>\n            {frontmatter.updated && (\n              <p>\n                Updated at\n                <time>{frontmatter.updated}</time>\n              </p>\n            )}\n            <p>\n              Reading time\n              <time>{readingTime.text.replace(/read/g, '')}</time>\n            </p>\n          </div>\n          <div className=\"blog-post-content\" dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      </Layout>\n      <Footer />\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        updated(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}